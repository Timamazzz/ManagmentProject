# Generated by Django 5.1.5 on 2025-02-04 08:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_jsonform.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название предмета')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('characteristics', django_jsonform.models.fields.JSONField(blank=True, null=True, verbose_name='Характеристики')),
            ],
            options={
                'verbose_name': 'Предмет',
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания отчета')),
                ('file', models.FileField(blank=True, null=True, upload_to='reports/', verbose_name='Файл отчета')),
                ('year', models.IntegerField(default=2025, verbose_name='Год')),
                ('month', models.IntegerField(choices=[(1, 'Январь'), (2, 'Февраль'), (3, 'Март'), (4, 'Апрель'), (5, 'Май'), (6, 'Июнь'), (7, 'Июль'), (8, 'Август'), (9, 'Сентябрь'), (10, 'Октябрь'), (11, 'Ноябрь'), (12, 'Декабрь')], default=2, verbose_name='Месяц')),
            ],
            options={
                'verbose_name': 'Отчет',
                'verbose_name_plural': 'Отчеты',
            },
        ),
        migrations.CreateModel(
            name='Volunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_service', models.IntegerField(verbose_name='Номер табельный')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=30, null=True, verbose_name='Отчество')),
                ('birthday', models.DateField(verbose_name='Дата рождения')),
                ('passport_series', models.CharField(max_length=10, verbose_name='Серия паспорта')),
                ('passport_number', models.CharField(max_length=15, verbose_name='Номер паспорта')),
                ('passport_issued', models.CharField(max_length=255, verbose_name='Кем выдан паспорт')),
                ('passport_issue_date', models.DateField(verbose_name='Дата выдачи паспорта')),
                ('contract_date', models.DateField(verbose_name='Дата заключения контракта')),
                ('order_number', models.CharField(max_length=50, verbose_name='Номер приказа')),
                ('enrollment_date', models.DateField(verbose_name='Дата зачисления в добровольческое формирование')),
                ('salary_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Размер денежной выплаты')),
                ('bic', models.CharField(max_length=9, verbose_name='БИК')),
                ('bank_name', models.CharField(max_length=255, verbose_name='Наименование кредитной организации')),
                ('correspondent_account', models.CharField(max_length=20, verbose_name='Корреспондентский счет')),
                ('checking_account', models.CharField(max_length=20, verbose_name='Расчетный счет')),
                ('inn', models.CharField(max_length=12, verbose_name='ИНН')),
                ('kpp', models.CharField(max_length=9, verbose_name='КПП')),
                ('dismissal_date', models.DateField(blank=True, null=True, verbose_name='Дата увольнения')),
                ('dismissal_order_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Номер приказа об увольнении')),
                ('status', models.CharField(choices=[('active', 'Активен'), ('dismissed', 'Уволен')], default='active', max_length=10, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Доброволец',
                'verbose_name_plural': 'Добровольцы',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Remark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Дата нарекания')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий к нареканию')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remarks', to='users_app.volunteer', verbose_name='Доброволец')),
            ],
            options={
                'verbose_name': 'Нарекание',
                'verbose_name_plural': 'Нарекания',
            },
        ),
        migrations.CreateModel(
            name='VolunteerItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteers', to='users_app.item', verbose_name='Предмет')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='users_app.volunteer', verbose_name='Доброволец')),
            ],
            options={
                'verbose_name': 'Предмет для добровольца',
                'verbose_name_plural': 'Предметы для добровольцев',
                'unique_together': {('volunteer', 'item')},
            },
        ),
    ]
